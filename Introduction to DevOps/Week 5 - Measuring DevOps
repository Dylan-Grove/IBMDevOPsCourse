------------------------------------------------------------
Rewarding for “A” while hoping for “B”
------------------------------------------------------------
- Social metrics to measure for social coders
-- Who's' leveraging the code you are building? are people using your code?
-- Who's code are you leveraging? are you reusing code?
- go from MTTF to MTTR mean time to failure to recovery
- from how long can we keep it online to how fast can we get back online
- measure and reward what you want to improve

------------------------------------------------------------
Vanity metrics vs. actionable metrics
------------------------------------------------------------
- vanity metrics like hits on a website.
good actionable approach:
- deploy a change to 50% of group A and none in group B
- measure revenue or engagement on group A
- if revenue goes up, deploy to all
actionable metric examples
-- reduce time to market
-- increase overall availability
-- reduce the time to deploy
-- defects detect before production
-- make more efficient use of infrastructure
-- quicker performance feedback
top for actionable metrics
-- mean lead time (feature to deployment)
-- release frequency 
-- change failure rate (how often do the things you push out fail)
-- mean time to recovery

------------------------------------------------------------
How to Measure Your Culture
------------------------------------------------------------
agree or disagree, on my team:
- information is actively sough
- failures are learning opportunites
- messengers are not shot
- responsibilites shared
- cross-functional collaboration is encourage and rewarded
- failure causes inquiry
- new ideas are welcomed

------------------------------------------------------------
Devops vs SRE
------------------------------------------------------------
- SRE is when a SWE is tasked with what used to be called operations
- Automate yourself out of a job
- SR focus on reducing toil from automation
- SRE teans are separate from development teams
- Stability is controlled through error budgets
- Developers rotate through operations
- SRE maintains separate dev and ops silos with one staffing pool, pull people from dev or ops
- devops breaks down the silos into one team
commonality
- both seek to make both dev and ops visible to each other
- both require a blameless culture
- the objective of both is the same
devops and sre
- the team that maintains the infra
- devops uses the infra to maintain their applications



Measure and reward what you want to improve.  

People seek information on what is rewarded and then seek to do that. 

Measuring social metrics leads to improved teamwork and measuring DevOps metrics allows you to see the progression toward your goals. 

If you want people to be social, then measure them being social. 

DevOps changes the objective of problem resolution from failure prevention to failure recovery. 

Vanity metrics may be appealing at first but offer limited actionable insights. 

Actionable metrics provide meaningful ways to measure your processes and take action toward goals. 

DevOps actionable metrics include mean lead time, release frequency, change failure rate, and mean time to recovery. 

You can rate statements developed by Dr. Nicole Forsgren to measure your team’s culture, including statements about information, failures, collaboration, and new ideas. 

Mean lead time is the measure of how long it takes for an idea to get to production. 

Change failure rate is the rate of failure from pushing new releases out. 

Mean time to recovery is how long it takes to recover from a failure. 

Failures are learning opportunities that should not be punished. 

Dr. Nicole Forsgren developed cultural statements for measuring team culture. 